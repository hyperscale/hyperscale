language: cpp

sudo: required

dist: trusty

compiler:
  - clang
  - gcc

os:
  - linux
  - osx

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - llvm-5.0-dev
            - valgrind
            - curl
            - libboost-all-dev
            - lcov
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - llvm-5.0-dev
            - valgrind
            - curl
            - libboost-all-dev
            - lcov
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"

before_install:
  - eval "${MATRIX_EVAL}"
  - echo $LANG
  - echo $LC_ALL
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update --quiet && brew install llvm && eval "$(pyenv init -)" && pyenv install 2.7.6 && pyenv global 2.7.6 && pyenv rehash; fi
  - pip install --user cpp-coveralls
  - $CXX --version

before_script:
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC

script:
  - sudo make -j2
  - make hyperscale-coverage

after_success: coveralls --exclude test --gcov-options '\-lp'
after_failure: cat Testing/Temporary/LastTest.log

branches:
  only:
    - master
    - "/^v\\d+\\./"
