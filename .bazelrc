# Sets the default Apple platform to macOS.
build:macos --apple_platform_type=macos

build --cxxopt='-std=c++20'
build --host_cxxopt='-std=c++20'
build --cxxopt='-pedantic'
build --cxxopt='-Wall'
build --cxxopt='-Wextra'

build:macos --cxxopt='-std=c++20'
build:macos --host_cxxopt='-std=c++20'

build:linux --cxxopt='-std=c++2a'
build:linux --host_cxxopt='-std=c++2a'


###############################################################################
# Common flags that apply to all configurations.
# Use sparingly for things common to all compilers and platforms.
###############################################################################
# Prevent invalid caching if input files are modified during a build.
build --experimental_guard_against_concurrent_changes
# Default to optimized builds
# Override via: "-c dbg" or --compilation_mode=dbg
build --compilation_mode=opt

###############################################################################
# Options for "generic_clang" builds: these options should generally apply to
# either clang or gcc and are curated based on need.
###############################################################################

# C++20 standard version is required.
build:generic_clang --cxxopt=-std=c++20 --host_cxxopt=-std=c++20

# Default to adding back asserts in optimized builds.
# This is a good compromise between runtime and debugability.
build:generic_clang --copt=-UNDEBUG

# The user.bazelrc file is not checked in but available for local mods.
# Always keep this at the end of the file so that user flags override.
try-import %workspace%/user.bazelrc

build --workspace_status_command "tools/workspace_status.sh"
